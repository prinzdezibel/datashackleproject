# -*- coding: utf-8 -*-

import grok
import transaction

import dolmen.content as content
from grok.util import create_application
from zope.app.wsgi import config
from zope.app.wsgi.interfaces import WSGIPublisherApplicationCreated
from zope.component import getUtility
from zope.app.appsetup.interfaces import IDatabaseOpenedWithRootEvent

import ${package}
from ${package}.interfaces import I${app_class_name}
from ${package} import resource

    
class ${app_class_name}(grok.Application, grok.Model):
    """The datashackle site manager.
    """
    grok.implements(I${app_class_name})
    title = u"The ${project} application."


class Index(grok.View):
    grok.context(I${app_class_name})
    grok.name('index')
   
    def update(self):
        resource.style.need()

    def render(self):
        return u"Hello World."

@grok.subscribe(IDatabaseOpenedWithRootEvent)
def init(event):
   import venusian
   import p2.datashackle.core
   scanner = venusian.Scanner()
   scanner.scan(${package}, categories=('datashackle',))
      
       
@grok.subscribe(WSGIPublisherApplicationCreated)
def wsgi_app_created(event):
   db = event.application.requestFactory._db
   connection = db.open()
   root = connection.root()
   application = root['Application']
   if 'theApp' not in application:
        name = 'theApp'
        new_app = create_application(${app_class_name}, root['Application'], name)
        transaction.commit()
   connection.close()
    

