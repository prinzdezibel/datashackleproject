[buildout]
develop = 
    src/${package}
    checkouts/p2.windowmanager.layout
    checkouts/p2.windowmanager.skin
    checkouts/p2.datashackle.core
    checkouts/p2.container
    checkouts/p2.datashackle.management
    checkouts/p2.datashackle.repository

eggs +=
    ${package}
    chameleon.zpt
    dolmen.app.authentication
    dolmen.app.site
    dolmen.app.layout
    dolmen.app.content
    dolmen.app.container
    fanstatic
    zope.fanstatic
    p2.container
    dolmen.blob
    dolmen.content
    dolmen.forms.base
    dolmen.menu
    dolmen.widget.image
    js.jquery
    js.jqueryui
    lxml
    grok
    grokcore.startup
    grokui.admin
    megrok.resource
    megrok.z3ctable
    menhir.contenttype.document
    menhir.contenttype.folder
    menhir.simple.navtree
    MySQL-python
    Paste
    PasteScript
    PasteDeploy
    PIL
#    PILwoTk
    repoze.vhm
    simplejson
    sqlalchemy-migrate
    z3c.evalexception>=2.0
    zope.app.form
    zope.catalog
    zope.errorview 
    zope.fanstatic
    zope.login
    zope.pluggableauth
    zope.principalannotation
    zope.session
    zope.app.file
    zope.mimetype
    p2.container
    p2.datashackle.core
    p2.datashackle.management
    p2.datashackle.repository
    p2.windowmanager.layout
    p2.windowmanager.skin

parts +=
# for PIL imaging
    zlib
    libjpeg
    PIL
    site_zcml
    zope_application
    mkdirs
    scripts
    zope_conf_debug
    zope_conf_deploy
    i18n
    test
    i18n_datashackle
    debug_ini
    deploy_ini
    pyramid_development_ini
    pyramid_production_ini
    wsgi_app
    omelette
    migrate

versions=global_versions

extends-cache = extends-cache

# http://svn.zope.org/groktoolkit
extends =      
    http://grok.zope.org/releaseinfo/1.5/versions.cfg

newest = false

exec-sitecustomize = false
include-site-packages = false

# Re-check this
# https://bugs.launchpad.net/zc.buildout/+bug/695980
#eggs-directory = eggs

#allow-picked-versions = false

   
#extensions = mr.developer buildout.dumppickedversions
extensions = mr.developer
always-checkout = false
sources-dir=checkouts
sources = checkouts
auto-checkout = 
    p2.windowmanager.layout
    p2.windowmanager.skin
    p2.datashackle.core
    p2.container
    p2.datashackle.management
    p2.datashackle.repository
    dolmen.app.layout
    dolmen.forms.base
    dolmen.app.viewselector
    megrok.z3ctable
    menhir.simple.navtree


[checkouts]
# Authenticated access
#p2.datashackle.core = git git@github.com:prinzdezibel/p2.datashackle.core.git
#p2.datashackle.management = git git@github.com:prinzdezibel/p2.datashackle.management.git 
#p2.datashackle.repository = git git@github.com:prinzdezibel/p2.datashackle.repository.git

# Authenticated git access - DEPRECATED packages
#p2.windowmanager.layout    = git me@git.projekt-und-partner.de:p2.windowmanager.layout.git 
#p2.windowmanager.skin      = git me@git.projekt-und-partner.de:p2.windowmanager.skin.git
#p2.container               = git me@git.projekt-und-partner.de:p2.container.git
#menhir.simple.navtree      = git me@git.projekt-und-partner.de:menhir.simple.navtree.git

# Anonymous git access
p2.datashackle.core = git https://github.com/prinzdezibel/p2.datashackle.core.git
p2.datashackle.management = git https://github.com/prinzdezibel/p2.datashackle.management.git
p2.datashackle.repository = git https://github.com/prinzdezibel/p2.datashackle.repository.git

# Anonymous git access - DEPRECATED packages
p2.windowmanager.layout         = git git://git.projekt-und-partner.de/p2.windowmanager.layout.git 
p2.windowmanager.skin           = git git://git.projekt-und-partner.de/p2.windowmanager.skin.git
p2.container                    = git git://git.projekt-und-partner.de/p2.container.git
menhir.simple.navtree           = git git://git.projekt-und-partner.de/menhir.simple.navtree.git
dolmen.app.layout               = git git://git.projekt-und-partner.de/dolmen.app.layout.git
dolmen.forms.base               = git git://git.projekt-und-partner.de/dolmen.forms.base.git
dolmen.app.viewselector         = git git://git.projekt-und-partner.de/dolmen.app.viewselector.git
megrok.z3ctable                 = git git://git.projekt-und-partner.de/megrok.z3ctable.git





[zlib]
recipe          = hexagonit.recipe.cmmi
url             = http://zlib.net/zlib-1.2.7.tar.gz
md5hash         = 618e944d7c7cd6521551e30b32322f4a
make-targets    = install

[libjpeg]
recipe          = hexagonit.recipe.cmmi
url             = http://www.ijg.org/files/jpegsrc.v8.tar.gz
configure-options = CFLAGS="-fPIC -I$${zlib:location}/include -L$${zlib:location}/lib"
make-targets    = install
ignore-existing = false

[PIL]
recipe          = zc.recipe.egg:custom
egg             = PIL==1.1.7
find-links      = http://dist.plone.org/thirdparty/
index           = http://example.com/ignore/me
#python          = python
include-dirs    = $${libjpeg:location}/include
library-dirs    = $${libjpeg:location}/lib
#                  $${python:lib}
rpath           = $${libjpeg:location}/lib
#                  $${python:lib}

[scripts]
recipe = zc.recipe.egg
eggs = $${buildout:eggs}
interpreter = python-console

[mkdirs]
recipe = z3c.recipe.mkdir
paths =
    $${zope_conf:filestorage}
    $${zope_conf:logfiles}
    $${zope_conf:blobstorage}


[zope3]
location=

[zope_application]
#recipe = zc.zope3recipes:app
recipe = z3c.recipe.scripts
eggs = ${package}

[site_zcml]
recipe = collective.recipe.template
input = etc/site.zcml.in
output = $${buildout:parts-directory}/etc/site.zcml


[zope_conf]
input = etc/zope.conf.in
filestorage = $${buildout:directory}/var/filestorage
blobstorage = $${buildout:directory}/var/blobstorage
logfiles = $${buildout:directory}/var/log
extra =
    <product-config setmanager>
        datashackle.db_provider $${database:provider}
        datashackle.db_host $${database:host}
        datashackle.db_name $${database:name}
        datashackle.db_user $${database:user}
        datashackle.db_password $${database:password}
    </product-config> 

[zope_conf_debug]
<= zope_conf
recipe = collective.recipe.template
output = $${buildout:parts-directory}/etc/zope.debug.conf
devmode = on


[zope_conf_deploy]
<= zope_conf
recipe = collective.recipe.template
output = $${buildout:parts-directory}/etc/zope.deploy.conf
devmode = off


[i18n]
recipe = z3c.recipe.i18n:i18n
packages = p2.datashackle.core
eggs = p2.datashackle.core
domain = p2.datashackle.core
output = src/p2.datashackle.core/src/p2/datashackle/core/locales
zcml = 


[test]
recipe = zc.recipe.testrunner
eggs = $${buildout:eggs}
defaults = ['--tests-pattern', '^f?tests$$', '-v']

[omelette]
recipe = collective.recipe.omelette
eggs = $${buildout:eggs}
location = $${buildout:directory}/omelette

[sphinx]
recipe = collective.recipe.sphinxbuilder



[i18n_datashackle]
recipe = z3c.recipe.i18n:i18n
packages = ${package}
eggs = ${package}
domain = ${package}
output = src/${package}/src/p2/datashackle/locales
zcml = 

[pyramid_development_ini]
recipe = collective.recipe.template
input = etc/pyramid_development.ini.in
output = $${buildout:parts-directory}/etc/pyramid_development.ini  
port = 8081
host = 0.0.0.0

[pyramid_production_ini]
recipe = collective.recipe.template
input = etc/pyramid_production.ini.in
output = $${buildout:parts-directory}/etc/pyramid_production.ini  
port = 8081
host = 0.0.0.0

[debug_ini]
recipe = collective.recipe.template
input = etc/debug.ini.in
output = $${buildout:parts-directory}/etc/debug.ini  
host = 0.0.0.0
port = 8080

[deploy_ini]
recipe = collective.recipe.template
input = etc/production.ini.in
output = $${buildout:parts-directory}/etc/production.ini  
host = 0.0.0.0
port = 8080

[wsgi_app]
recipe = collective.recipe.modwsgi
eggs = $${buildout:eggs}
config-file = $${buildout:parts-directory}/etc/production.ini


[migrate]
recipe = zc.recipe.egg
eggs = p2.datashackle.repository
  
entry-points = migrate=p2.datashackle.repository.manage:main
arguments = url='mysql://$${database:user}:$${database:password}@$${database:host}/$${database:name}',
    repository='$${buildout:directory}/checkouts/p2.datashackle.repository/src/p2/datashackle/repository'
